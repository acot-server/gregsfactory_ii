GTCEuStartupEvents.registry("gtceu:machine", (event) => {
    
    event.create("chroniton_hoursglass", "multiblock")
            .rotationState(RotationState.ALL)
            .recipeType("chroniton_hoursglass")
            .langValue("Chroniton Hoursglass Manipulator")
            .appearanceBlock(GTBlocks.FUSION_CASING)
        	.recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK)])
        .pattern(definition => FactoryBlockPattern.start()
	        .aisle
	        .aisle
	        .aisle
	        .aisle
	        .aisle
	        .aisle("AAACCCCCCCCCCCCCCCAAA", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     DDDDDDDDDDD     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "AAACCCCCCCCCCCCCCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      EEEEEEEEE      ", "      EEEEEEEEE      ", "      EEEEEEEEE      ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "     D    F    D     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "      EEEEEEEEE      ", "      EEEEEEEEE      ", "      EEEEEEEEE      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      E       E      ", "      E       E      ", "      E       E      ", "       EEEEEEE       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "     D    F    D     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "       EEEEEEE       ", "      E       E      ", "      E       E      ", "      E       E      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      E       E      ", "      E       E      ", "      E       E      ", "       E     E       ", "        EEEEE        ", "                     ", "                     ", "                     ", "                     ", "                     ", "     D    F    D     ", "                     ", "                     ", "                     ", "                     ", "                     ", "        EEEEE        ", "       E     E       ", "      E       E      ", "      E       E      ", "      E       E      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      E       E      ", "      E       E      ", "      E       E      ", "       E     E       ", "        E   E        ", "         EEE         ", "         GGG         ", "         GGG         ", "         GGG         ", "         EEE         ", "     D   FFF   D     ", "         EEE         ", "         GGG         ", "         GGG         ", "         GGG         ", "         EEE         ", "        E   E        ", "       E     E       ", "      E       E      ", "      E       E      ", "      E       E      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      E       E      ", "      E       E      ", "      E       E      ", "       E     E       ", "        E   E        ", "         E E         ", "         G G         ", "         G G         ", "         G G         ", "         E E         ", "     DFFFF FFFFD     ", "         E E         ", "         G G         ", "         G G         ", "         G G         ", "         E E         ", "        E   E        ", "       E     E       ", "      E       E      ", "      E       E      ", "      E       E      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      E       E      ", "      E       E      ", "      E       E      ", "       E     E       ", "        E   E        ", "         EEE         ", "         GGG         ", "         GGG         ", "         GGG         ", "         EEE         ", "     D   FFF   D     ", "         EEE         ", "         GGG         ", "         GGG         ", "         GGG         ", "         EEE         ", "        E   E        ", "       E     E       ", "      E       E      ", "      E       E      ", "      E       E      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      E       E      ", "      E       E      ", "      E       E      ", "       E     E       ", "        EEEEE        ", "                     ", "                     ", "                     ", "                     ", "                     ", "     D    F    D     ", "                     ", "                     ", "                     ", "                     ", "                     ", "        EEEEE        ", "       E     E       ", "      E       E      ", "      E       E      ", "      E       E      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      E       E      ", "      E       E      ", "      E       E      ", "       EEEEEEE       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "     D    F    D     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "       EEEEEEE       ", "      E       E      ", "      E       E      ", "      E       E      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCAAAAAAAAACCCAAA", "      EEEEEEEEE      ", "      EEEEEEEEE      ", "      EEEEEEEEE      ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "     D    F    D     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "      EEEEEEEEE      ", "      EEEEEEEEE      ", "      EEEEEEEEE      ", "AAACCCAAAAAAAAACCCAAA") 
	        .aisle("AAACCCCCCCCCCCCCCCAAA", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     DDDDDDDDDDD     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "     B         B     ", "AAACCCCCCCCCCCCCCCAAA") 
	        .aisle
	        .aisle("AAACCCCCCCCCCCCCCCAAA", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "AAACCCCCCCCCCCCCCCAAA") 
	        .aisle
	        .aisle
	        .aisle("AAAAAAAAAA@AAAAAAAAAA", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "AAAAAAAAAAAAAAAAAAAAA") 
	        .where("A", Predicates.blocks("gtca:radiant_proof_reinforced_casing"))
	        .where("@", Predicates.controller(Predicates.blocks(definition.get())))
	        .where("B", Predicates.blocks("gtca:adamantium_alloy_frame"))
	        .where(" ", Predicates.any())
            .where(
                "C",
                Predicates.blocks("gtca:rnac_casing")
                    .setMinGlobalLimited(1)
                    .or(Predicates.abilities(PartAbility.COMPUTATION_DATA_RECEPTION)
                        .setExactLimit(1)
                        )
					.or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setExactLimit(1))
                    .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                )
	        .where("D", Predicates.blocks("gtceu:high_power_casing"))
	        .where("E", Predicates.blocks("botania:elf_glass"))
	        .where("F", Predicates.blocks("gtceu:fusion_casing_mk3"))
	        .where("G", Predicates.blocks("gtceu:tritanium_coil_block"))
        .build())

        .workableCasingModel("gtca:block/casing/radiant_proof_reinforced_casing", "gtca:block/multiblock/pcb_factory")
});