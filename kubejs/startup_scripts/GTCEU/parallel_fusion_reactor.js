// priority: 0
const $FusionReactorMachine = Java.loadClass("com.gregtechceu.gtceu.common.machine.multiblock.electric.FusionReactorMachine")

//Parallel Fusion Reactor MK1
GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('parallel_fusion_reactor_1', 'multiblock').machine((holder) => new $FusionReactorMachine(holder, GTValues.LuV))
        .rotationState(RotationState.ALL)
        .langValue("Parallel Fusion Reactor MK1")
        .recipeTypes(GTRecipeTypes.FUSION_RECIPES)
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK), GTRecipeModifiers.DEFAULT_ENVIRONMENT_REQUIREMENT])
        .appearanceBlock(GTBlocks.FUSION_CASING)
        .pattern(definition => FactoryBlockPattern.start()
	        .aisle("                                                       ", "                                                       ", "                      AABAAAAABAA                      ", "                                                       ", "                                                       ") 
	        .aisle("                                                       ", "                      AAAAAAAAAAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                      AAAAAAAAAAA                      ", "                                                       ") 
	        .aisle("                      AADAAAAADAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                AAACCC           CCCAAA                ", "                   AAACCCCCCCCCCCAAA                   ", "                      AADAAAAADAA                      ") 
	        .aisle("                   AAA           AAA                   ", "                AAACCCAAAAAAAAAAACCCAAA                ", "               ECCC   CCCCCCCCCCC   CCCE               ", "                AAACCCAAAAAAAAAAACCCAAA                ", "                   AAA           AAA                   ") 
	        .aisle("                AAA                 AAA                ", "               ACCCAAA           AAACCCA               ", "             AAC   CCCAABAA@AABAACCC   CAA             ", "               ACCCAAA           AAACCCA               ", "                AAA                 AAA                ") 
	        .aisle("               A                       A               ", "             AACAAA                 AAACAA             ", "            ACC CCCAAA           AAACCC CCA            ", "             AACAAA                 AAACAA             ", "               A                       A               ") 
	        .aisle("             AA                         AA             ", "            ACCA                       ACCA            ", "          AAC  CAAA                 AAAC  CAA          ", "            ACCA                       ACCA            ", "             AA                         AA             ") 
	        .aisle("            A                             A            ", "          AACAA                         AACAA          ", "         ACC CCE                       ECC CCA         ", "          AACAA                         AACAA          ", "            A                             A            ") 
	        .aisle("          AA                               AA          ", "         ACCA                             ACCA         ", "        AC  CAA                         AAC  CA        ", "         ACCA                             ACCA         ", "          AA                               AA          ") 
	        .aisle("         A                                   A         ", "        ACAA                               AACA        ", "       AC CCA                             ACC CA       ", "        ACAA                               AACA        ", "         A                                   A         ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CAA                               AAC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CA                                 AC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("       A                                       A       ", "      ACA                                     ACA      ", "     AC CA                                   AC CA     ", "      ACA                                     ACA      ", "       A                                       A       ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("     A                                           A     ", "    ACA                                         ACA    ", "   EC CE                                       EC CE   ", "    ACA                                         ACA    ", "     A                                           A     ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  D                                                 D  ", " ACA                                               ACA ", "BC CB                                             BC CB", " ACA                                               ACA ", "  D                                                 D  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  D                                                 D  ", " ACA                                               ACA ", "BC CB                                             BC CB", " ACA                                               ACA ", "  D                                                 D  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("     A                                           A     ", "    ACA                                         ACA    ", "   EC CE                                       EC CE   ", "    ACA                                         ACA    ", "     A                                           A     ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACAA    ", "      A                                         A      ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("       A                                       A       ", "      ACA                                     ACA      ", "     AC CA                                   AC CA     ", "      ACA                                     ACA      ", "       A                                       A       ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CA                                 AC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CAA                               AAC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("         A                                   A         ", "        ACAA                               AACA        ", "       AC CCA                             ECC CA       ", "        ACAA                               AACA        ", "         A                                   A         ") 
	        .aisle("          AA                               AA          ", "         ACCA                             ACCA         ", "        AC  CAA                         AAC  CA        ", "         ACCA                             ACCA         ", "          AA                               AA          ") 
	        .aisle("            A                             A            ", "          AACAA                         AACAA          ", "         ACC CCE                       ACC CCA         ", "          AACAA                         AACAA          ", "            A                             A            ") 
	        .aisle("             AA                         AA             ", "            ACCA                       ACCA            ", "          AAC  CAAA                 AAAC  CAA          ", "            ACCA                       ACCA            ", "             AA                         AA             ") 
	        .aisle("               A                       A               ", "             AACAAA                 AAACAA             ", "            ACC CCCAAA           AAACCC CCE            ", "             AACAAA                 AAACAA             ", "               A                       A               ") 
	        .aisle("                AAA                 AAA                ", "               ACCCAAA           AAACCCA               ", "             AAC   CCCAABAAFAABAACCC   CAA             ", "               ACCCAAA           AAACCCA               ", "                AAA                 AAA                ") 
	        .aisle("                   AAA           AAA                   ", "                AAACCCAAAAAAAAAAACCCAAA                ", "               ECCC   CCCCCCCCCCC   CCCA               ", "                AAACCCAAAAAAAAAAACCCAAA                ", "                   AAA           AAA                   ") 
	        .aisle("                      AADAAAAADAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                AAACCC           CCCAAA                ", "                   AAACCCCCCCCCCCAAA                   ", "                      AADAAAAADAA                      ") 
	        .aisle("                                                       ", "                      AAAAAAAAAAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                      AAAAAAAAAAA                      ", "                                                       ") 
	        .aisle("                                                       ", "                                                       ", "                      ABAAAAAABAA                      ", "                                                       ", "                                                       ") 
	        .where(" ", Predicates.any())
            .where("@", Predicates.controller(Predicates.blocks(definition.get())))
	        .where("A", Predicates.blocks('gtceu:fusion_casing'))
	        .where('B', Predicates.blocks(GTBlocks.FUSION_CASING.get())
                        .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS_1X).setMaxGlobalLimited(16))
            )
	        .where("C", Predicates.blocks('gtceu:superconducting_coil'))
	        .where('D', Predicates.blocks(GTBlocks.FUSION_CASING.get())
                    .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS_1X).setMaxGlobalLimited(16))
                    )
	        .where('E', Predicates.blocks(GTBlocks.FUSION_CASING.get())
                    .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(16))
                    )
	        .where('F', Predicates.blocks(GTBlocks.FUSION_CASING.get())
                    .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setExactLimit(1))
                    )
            .build())
            .workableCasingModel("gtceu:block/casings/fusion/fusion_casing", "gtceu:block/multiblock/fusion_reactor")
        })


//Parallel Fusion Reactor MK2
GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('parallel_fusion_reactor_2', 'multiblock').machine((holder) => new $FusionReactorMachine(holder, GTValues.ZPM))
        .rotationState(RotationState.ALL)
        .langValue("Parallel Fusion Reactor MK2")
        .recipeTypes(GTRecipeTypes.FUSION_RECIPES)
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK), GTRecipeModifiers.DEFAULT_ENVIRONMENT_REQUIREMENT])
        .appearanceBlock(GTBlocks.FUSION_CASING_MK2)
        .pattern(definition => FactoryBlockPattern.start()
	        .aisle("                                                       ", "                                                       ", "                      AABAAAAABAA                      ", "                                                       ", "                                                       ") 
	        .aisle("                                                       ", "                      AAAAAAAAAAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                      AAAAAAAAAAA                      ", "                                                       ") 
	        .aisle("                      AADAAAAADAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                AAACCC           CCCAAA                ", "                   AAACCCCCCCCCCCAAA                   ", "                      AADAAAAADAA                      ") 
	        .aisle("                   AAA           AAA                   ", "                AAACCCAAAAAAAAAAACCCAAA                ", "               ECCC   CCCCCCCCCCC   CCCE               ", "                AAACCCAAAAAAAAAAACCCAAA                ", "                   AAA           AAA                   ") 
	        .aisle("                AAA                 AAA                ", "               ACCCAAA           AAACCCA               ", "             AAC   CCCAABAA@AABAACCC   CAA             ", "               ACCCAAA           AAACCCA               ", "                AAA                 AAA                ") 
	        .aisle("               A                       A               ", "             AACAAA                 AAACAA             ", "            ACC CCCAAA           AAACCC CCA            ", "             AACAAA                 AAACAA             ", "               A                       A               ") 
	        .aisle("             AA                         AA             ", "            ACCA                       ACCA            ", "          AAC  CAAA                 AAAC  CAA          ", "            ACCA                       ACCA            ", "             AA                         AA             ") 
	        .aisle("            A                             A            ", "          AACAA                         AACAA          ", "         ACC CCE                       ECC CCA         ", "          AACAA                         AACAA          ", "            A                             A            ") 
	        .aisle("          AA                               AA          ", "         ACCA                             ACCA         ", "        AC  CAA                         AAC  CA        ", "         ACCA                             ACCA         ", "          AA                               AA          ") 
	        .aisle("         A                                   A         ", "        ACAA                               AACA        ", "       AC CCA                             ACC CA       ", "        ACAA                               AACA        ", "         A                                   A         ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CAA                               AAC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CA                                 AC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("       A                                       A       ", "      ACA                                     ACA      ", "     AC CA                                   AC CA     ", "      ACA                                     ACA      ", "       A                                       A       ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("     A                                           A     ", "    ACA                                         ACA    ", "   EC CE                                       EC CE   ", "    ACA                                         ACA    ", "     A                                           A     ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  D                                                 D  ", " ACA                                               ACA ", "BC CB                                             BC CB", " ACA                                               ACA ", "  D                                                 D  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  D                                                 D  ", " ACA                                               ACA ", "BC CB                                             BC CB", " ACA                                               ACA ", "  D                                                 D  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("     A                                           A     ", "    ACA                                         ACA    ", "   EC CE                                       EC CE   ", "    ACA                                         ACA    ", "     A                                           A     ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACAA    ", "      A                                         A      ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("       A                                       A       ", "      ACA                                     ACA      ", "     AC CA                                   AC CA     ", "      ACA                                     ACA      ", "       A                                       A       ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CA                                 AC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CAA                               AAC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("         A                                   A         ", "        ACAA                               AACA        ", "       AC CCA                             ECC CA       ", "        ACAA                               AACA        ", "         A                                   A         ") 
	        .aisle("          AA                               AA          ", "         ACCA                             ACCA         ", "        AC  CAA                         AAC  CA        ", "         ACCA                             ACCA         ", "          AA                               AA          ") 
	        .aisle("            A                             A            ", "          AACAA                         AACAA          ", "         ACC CCE                       ACC CCA         ", "          AACAA                         AACAA          ", "            A                             A            ") 
	        .aisle("             AA                         AA             ", "            ACCA                       ACCA            ", "          AAC  CAAA                 AAAC  CAA          ", "            ACCA                       ACCA            ", "             AA                         AA             ") 
	        .aisle("               A                       A               ", "             AACAAA                 AAACAA             ", "            ACC CCCAAA           AAACCC CCE            ", "             AACAAA                 AAACAA             ", "               A                       A               ") 
	        .aisle("                AAA                 AAA                ", "               ACCCAAA           AAACCCA               ", "             AAC   CCCAABAAFAABAACCC   CAA             ", "               ACCCAAA           AAACCCA               ", "                AAA                 AAA                ") 
	        .aisle("                   AAA           AAA                   ", "                AAACCCAAAAAAAAAAACCCAAA                ", "               ECCC   CCCCCCCCCCC   CCCA               ", "                AAACCCAAAAAAAAAAACCCAAA                ", "                   AAA           AAA                   ") 
	        .aisle("                      AADAAAAADAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                AAACCC           CCCAAA                ", "                   AAACCCCCCCCCCCAAA                   ", "                      AADAAAAADAA                      ") 
	        .aisle("                                                       ", "                      AAAAAAAAAAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                      AAAAAAAAAAA                      ", "                                                       ") 
	        .aisle("                                                       ", "                                                       ", "                      AABAAAAABAA                      ", "                                                       ", "                                                       ") 
	        .where(" ", Predicates.any())
            .where("@", Predicates.controller(Predicates.blocks(definition.get())))
	        .where("A", Predicates.blocks('gtceu:fusion_casing_mk2'))
	        .where('B', Predicates.blocks(GTBlocks.FUSION_CASING_MK2.get())
                        .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS_1X).setMaxGlobalLimited(16))
            )
	        .where("C", Predicates.blocks('gtceu:fusion_coil'))
	        .where('D', Predicates.blocks(GTBlocks.FUSION_CASING_MK2.get())
                    .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS_1X).setMaxGlobalLimited(16))
                    )
	        .where('E', Predicates.blocks(GTBlocks.FUSION_CASING_MK2.get())
                    .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(16))
                    )
	        .where('F', Predicates.blocks(GTBlocks.FUSION_CASING_MK2.get())
                    .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setExactLimit(1))
                    )
            .build())
            .workableCasingModel("gtceu:block/casings/fusion/fusion_casing_mk2", "gtceu:block/multiblock/fusion_reactor")
        })

//Parallel Fusion Reactor MK2
GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('parallel_fusion_reactor_3', 'multiblock').machine((holder) => new $FusionReactorMachine(holder, GTValues.UV))
        .rotationState(RotationState.ALL)
        .langValue("Parallel Fusion Reactor MK3")
        .recipeTypes(GTRecipeTypes.FUSION_RECIPES)
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK), GTRecipeModifiers.DEFAULT_ENVIRONMENT_REQUIREMENT])
        .appearanceBlock(GTBlocks.FUSION_CASING_MK3)
        .pattern(definition => FactoryBlockPattern.start()
	        .aisle("                                                       ", "                                                       ", "                      AABAAAAABAA                      ", "                                                       ", "                                                       ") 
	        .aisle("                                                       ", "                      AAAAAAAAAAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                      AAAAAAAAAAA                      ", "                                                       ") 
	        .aisle("                      AADAAAAADAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                AAACCC           CCCAAA                ", "                   AAACCCCCCCCCCCAAA                   ", "                      AADAAAAADAA                      ") 
	        .aisle("                   AAA           AAA                   ", "                AAACCCAAAAAAAAAAACCCAAA                ", "               ECCC   CCCCCCCCCCC   CCCE               ", "                AAACCCAAAAAAAAAAACCCAAA                ", "                   AAA           AAA                   ") 
	        .aisle("                AAA                 AAA                ", "               ACCCAAA           AAACCCA               ", "             AAC   CCCAABAA@AABAACCC   CAA             ", "               ACCCAAA           AAACCCA               ", "                AAA                 AAA                ") 
	        .aisle("               A                       A               ", "             AACAAA                 AAACAA             ", "            ACC CCCAAA           AAACCC CCA            ", "             AACAAA                 AAACAA             ", "               A                       A               ") 
	        .aisle("             AA                         AA             ", "            ACCA                       ACCA            ", "          AAC  CAAA                 AAAC  CAA          ", "            ACCA                       ACCA            ", "             AA                         AA             ") 
	        .aisle("            A                             A            ", "          AACAA                         AACAA          ", "         ACC CCE                       ECC CCA         ", "          AACAA                         AACAA          ", "            A                             A            ") 
	        .aisle("          AA                               AA          ", "         ACCA                             ACCA         ", "        AC  CAA                         AAC  CA        ", "         ACCA                             ACCA         ", "          AA                               AA          ") 
	        .aisle("         A                                   A         ", "        ACAA                               AACA        ", "       AC CCA                             ACC CA       ", "        ACAA                               AACA        ", "         A                                   A         ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CAA                               AAC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CA                                 AC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("       A                                       A       ", "      ACA                                     ACA      ", "     AC CA                                   AC CA     ", "      ACA                                     ACA      ", "       A                                       A       ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("     A                                           A     ", "    ACA                                         ACA    ", "   EC CE                                       EC CE   ", "    ACA                                         ACA    ", "     A                                           A     ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  D                                                 D  ", " ACA                                               ACA ", "BC CB                                             BC CB", " ACA                                               ACA ", "  D                                                 D  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  D                                                 D  ", " ACA                                               ACA ", "BC CB                                             BC CB", " ACA                                               ACA ", "  D                                                 D  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("  A                                                 A  ", " ACA                                               ACA ", "AC CA                                             AC CA", " ACA                                               ACA ", "  A                                                 A  ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("   A                                               A   ", "  ACA                                             ACA  ", " AC CA                                           AC CA ", "  ACA                                             ACA  ", "   A                                               A   ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("    A                                             A    ", "   ACA                                           ACA   ", "  AC CA                                         AC CA  ", "   ACA                                           ACA   ", "    A                                             A    ") 
	        .aisle("     A                                           A     ", "    ACA                                         ACA    ", "   EC CE                                       EC CE   ", "    ACA                                         ACA    ", "     A                                           A     ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACAA    ", "      A                                         A      ") 
	        .aisle("      A                                         A      ", "     ACA                                       ACA     ", "    AC CA                                     AC CA    ", "     ACA                                       ACA     ", "      A                                         A      ") 
	        .aisle("       A                                       A       ", "      ACA                                     ACA      ", "     AC CA                                   AC CA     ", "      ACA                                     ACA      ", "       A                                       A       ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CA                                 AC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("        A                                     A        ", "       ACA                                   ACA       ", "      AC CAA                               AAC CA      ", "       ACA                                   ACA       ", "        A                                     A        ") 
	        .aisle("         A                                   A         ", "        ACAA                               AACA        ", "       AC CCA                             ECC CA       ", "        ACAA                               AACA        ", "         A                                   A         ") 
	        .aisle("          AA                               AA          ", "         ACCA                             ACCA         ", "        AC  CAA                         AAC  CA        ", "         ACCA                             ACCA         ", "          AA                               AA          ") 
	        .aisle("            A                             A            ", "          AACAA                         AACAA          ", "         ACC CCE                       ACC CCA         ", "          AACAA                         AACAA          ", "            A                             A            ") 
	        .aisle("             AA                         AA             ", "            ACCA                       ACCA            ", "          AAC  CAAA                 AAAC  CAA          ", "            ACCA                       ACCA            ", "             AA                         AA             ") 
	        .aisle("               A                       A               ", "             AACAAA                 AAACAA             ", "            ACC CCCAAA           AAACCC CCE            ", "             AACAAA                 AAACAA             ", "               A                       A               ") 
	        .aisle("                AAA                 AAA                ", "               ACCCAAA           AAACCCA               ", "             AAC   CCCAABAAFAABAACCC   CAA             ", "               ACCCAAA           AAACCCA               ", "                AAA                 AAA                ") 
	        .aisle("                   AAA           AAA                   ", "                AAACCCAAAAAAAAAAACCCAAA                ", "               ECCC   CCCCCCCCCCC   CCCA               ", "                AAACCCAAAAAAAAAAACCCAAA                ", "                   AAA           AAA                   ") 
	        .aisle("                      AADAAAAADAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                AAACCC           CCCAAA                ", "                   AAACCCCCCCCCCCAAA                   ", "                      AADAAAAADAA                      ") 
	        .aisle("                                                       ", "                      AAAAAAAAAAA                      ", "                   AAACCCCCCCCCCCAAA                   ", "                      AAAAAAAAAAA                      ", "                                                       ") 
	        .aisle("                                                       ", "                                                       ", "                      AABAAAAABAA                      ", "                                                       ", "                                                       ") 
	        .where(" ", Predicates.any())
            .where("@", Predicates.controller(Predicates.blocks(definition.get())))
	        .where("A", Predicates.blocks('gtceu:fusion_casing_mk3'))
	        .where('B', Predicates.blocks(GTBlocks.FUSION_CASING_MK3.get())
                        .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS_1X).setMaxGlobalLimited(16))
            )
	        .where("C", Predicates.blocks('gtceu:fusion_coil'))
	        .where('D', Predicates.blocks(GTBlocks.FUSION_CASING_MK3.get())
                    .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS_1X).setMaxGlobalLimited(16))
                    )
	        .where('E', Predicates.blocks(GTBlocks.FUSION_CASING_MK3.get())
                    .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(16))
                    )
	        .where('F', Predicates.blocks(GTBlocks.FUSION_CASING_MK3.get())
                    .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setExactLimit(1))
                    )
            .build())
            .workableCasingModel("gtceu:block/casings/fusion/fusion_casing_mk3", "gtceu:block/multiblock/fusion_reactor")
        })